events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/javascript
        application/json
        application/javascript;

    server {
        listen 8080;
        server_name localhost;
        root /backups;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Main backup status page
        location / {
            default_type text/html;
            return 200 '
            <!DOCTYPE html>
            <html>
            <head>
                <title>PostgreSQL Backup Monitor</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 20px; }
                    .header { background: #f0f0f0; padding: 20px; border-radius: 5px; }
                    .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
                    .status { padding: 10px; margin: 10px 0; border-radius: 3px; }
                    .success { background: #d4edda; color: #155724; }
                    .warning { background: #fff3cd; color: #856404; }
                    .error { background: #f8d7da; color: #721c24; }
                    .log { background: #f8f9fa; padding: 10px; border-radius: 3px; font-family: monospace; }
                    table { width: 100%; border-collapse: collapse; }
                    th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }
                    th { background-color: #f2f2f2; }
                </style>
            </head>
            <body>
                <div class="header">
                    <h1>PostgreSQL Backup Monitor</h1>
                    <p>Last updated: <span id="timestamp"></span></p>
                </div>
                
                <div class="section">
                    <h2>Backup Status</h2>
                    <div id="status"></div>
                </div>
                
                <div class="section">
                    <h2>Backup Files</h2>
                    <div id="files"></div>
                </div>
                
                <div class="section">
                    <h2>Recent Logs</h2>
                    <div id="logs"></div>
                </div>
                
                <script>
                    function updateStatus() {
                        fetch("/api/status")
                            .then(response => response.json())
                            .then(data => {
                                document.getElementById("status").innerHTML = data.status;
                                document.getElementById("files").innerHTML = data.files;
                                document.getElementById("logs").innerHTML = data.logs;
                                document.getElementById("timestamp").textContent = new Date().toLocaleString();
                            })
                            .catch(error => {
                                document.getElementById("status").innerHTML = "<div class=\"error\">Error loading status: " + error + "</div>";
                            });
                    }
                    
                    // Update every 30 seconds
                    updateStatus();
                    setInterval(updateStatus, 30000);
                </script>
            </body>
            </html>
            ';
        }

        # API endpoints for status
        location /api/status {
            default_type application/json;
            return 200 '{
                "status": "<div class=\"success\">Backup service is running</div>",
                "files": "<p>Backup files available</p>",
                "logs": "<div class=\"log\">Recent backup logs...</div>"
            }';
        }

        # Backup file listing
        location /files {
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            add_header Content-Type text/html;
        }

        # Download backup files
        location /download/ {
            alias /backups/;
            add_header Content-Disposition "attachment";
        }

        # View backup logs
        location /logs {
            alias /backups/postgres/logs/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Backup statistics
        location /stats {
            default_type application/json;
            return 200 '{
                "total_backups": 0,
                "latest_backup": null,
                "total_size": "0B",
                "last_backup_time": null
            }';
        }
    }
} 