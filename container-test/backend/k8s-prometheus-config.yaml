apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "nginx_rules.yml"
    
    scrape_configs:
      - job_name: 'nginx-backend'
        static_configs:
          - targets: ['nginx-backend-service:80']
        metrics_path: /metrics
        scrape_interval: 10s
        scrape_timeout: 5s
        
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
    
    nginx_rules.yml: |
      groups:
      - name: nginx_connection_pool
        rules:
        - record: nginx_connection_pool_utilization
          expr: (nginx_connections_active / 1024) * 100
        
        - alert: NginxConnectionPoolHigh
          expr: nginx_connection_pool_utilization > 80
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "Nginx connection pool utilization is high"
            description: "Connection pool is {{ $value }}% utilized"
        
        - alert: NginxConnectionPoolCritical
          expr: nginx_connection_pool_utilization > 95
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: "Nginx connection pool is nearly full"
            description: "Connection pool is {{ $value }}% utilized"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        command:
        - /bin/prometheus
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --storage.tsdb.retention.time=200h
        - --web.enable-lifecycle
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
  type: ClusterIP 